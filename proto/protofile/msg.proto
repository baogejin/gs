syntax = "proto3";

package myproto;

option go_package = "./myproto";

enum MsgId{
    Msg_None=0;
    Msg_RegisterREQ=1;
    Msg_RegisterACK=2;
    Msg_LoginREQ=3;
    Msg_LoginACK=4;
    Msg_CreateRoleREQ=5;
    Msg_CreateRoleACK=6;
    Msg_EnterGameREQ=7;
    Msg_EnterGameACK=8;
    Msg_LogoutREQ=9;
    Msg_LogoutACK=10;
    Msg_KickPUSH=11;
    Msg_ChatREQ=12;
    Msg_ChatACK=13;
    Msg_ChatPUSH=14;
    Msg_GMREQ=15;
    Msg_GMACK=16;
    Msg_ItemUpdatePUSH=17;

    Msg_CreateBattleREQ=100;
    Msg_CreateBattleACK=101;
    Msg_BattleInfoPUSH=102;
    Msg_BattleStartPUSH=103;
    Msg_BattleActionPUSH=104;
    Msg_BattleFinishPUSH=105;
    Msg_BattleStartREQ=106;
    Msg_BattleStartACK=107;
}

enum ResultCode{
    Success=0;
    MsgErr=1;
    AccountExist=101;
    AccountNotExist=102;
    RoleNameExist=103;
    PasswordErr=104;
    AlreadyLogin=105;
    AccountEmpty=106;
    PasswordEmpty=107;
    AccountErr=108;
    AlreadyHasRole=109;
    NeedLogin=110;
    RoleNameIllegal=111;
    CreateRoleFaild=112;
    EnterGameFailed=113;
    PlayerNotFound=114;
    GMCmdNotFound=115;
    GMCmdParamErr=116;
    GMCmdExecErr=117;
    CreateBattleFailed=118;
}

message RegisterREQ{
    string Account=1;
    string Password=2;
}

message RegisterACK{
    ResultCode Ret=1;
}

message LoginREQ{
    string Account=1;
    string Password=2;
}

message LoginACK{
    ResultCode Ret=1;
    uint64 Uid=2;
    bool HasRole=3;
}

message PlayerBagInfo{
    map<int32,int64> Unoccupied=1;
    map<int32,Item> StackItems=2;
    map<uint64,Item> UnstackItems=3;
}

message PlayerInfo{
    uint64 Uid=1;
    string Name=2;
    PlayerBagInfo BagInfo=3;
}

message CreateRoleREQ{
    string Name=1;
}

message CreateRoleACK{
    ResultCode Ret=1;
}

message EnterGameREQ{

}

message EnterGameACK{
    ResultCode Ret=1;
    PlayerInfo Info=2;
}

message LogoutREQ{
    
}

message LogoutACK{
    ResultCode Ret=1;
}

message KickPUSH{
    
}

message ChatREQ{
    string Msg=1;
}

message ChatACK{
    ResultCode Ret=1;
}

message ChatPUSH{
    uint64 Uid=1;
    string Name=2;
    string Msg=3;
}

enum UnitType {
    UnitMonster=0;
    UnitPlayer=1;
}

enum TargetType {
    TargetNone=0;
    EnemySingle=1;
    EnemySingleFront=2;
    EnemySingleBehind=3;
    EnemyAll=4;
    EnemyFrontAll=5;
    EnemyBehindAll=6;
    TargetSelf=10;
    AllySingle=11;
    AllySingleFront=12;
    AllySingleBehind=13;
    AllyAll=14;
    AllyFrontAll=15;
    AllyBehindAll=16;
}

message Item{
    uint64 Id=1;
    int32 ItemId=2;
    int64 Num=3;
}

enum ItemType {
    ItemTypeNone=0;
    UnoccupiedItem=1;
    StackItem=2;
    UnstackItem=3;
    EquipItem=4;
}

enum Quality{
    QualityNone=0;
    White=1;
    Green=2;
    Blue=3;
    Purple=4;
    Orange=5;
}

message GMREQ{
    string Cmd=1;
}

message GMACK{
    ResultCode Ret=1;
}

enum ItemUpdateType{
    ItemUpdateNone=0;
    ItemAdd=1;
    ItemDel=2;
}

message ItemUpdatePUSH{
    ItemUpdateType UpdateType=1;
    repeated Item Items=2;
}

message CreateBattleREQ{
    int32 LevelId=1;
}

message CreateBattleACK{
    ResultCode Ret=1;
}

message BattleUint{
    int32 Id=1;
    uint64 Uid=2;
    string Name=3;
    int32 Team=4;
    int32 Position=5;
    int64 HP=6;
    int64 MaxHP=7;
}

message BattleInfoPUSH{
    uint64 BattleId=1;
    int32 LevelId=2;
    repeated BattleUint Units=3;
}

message BattleStartPUSH{
    uint64 BattleId=1;
}

message BattleSkillStart{
    int32 Src=1;
    int32 SkillId=2;
    repeated int32 Tar=3;
}

message BattleSkillEffect{
    int32 Src=1;
    int32 SkillId=2;
    int32 Tar=3;
    bool IsHeal=4;
    int64 Value=5;
}

message BattleActionPUSH{
    uint64 BattleId=1;
    repeated BattleSkillEffect Effects=2;
    repeated BattleSkillStart Skills=3;
}

message BattleFinishPUSH{
    uint64 BattleId=1;
    bool Win=2;
}

message BattleStartREQ{
    uint64 BattleId=1;
}

message BattleStartACK{
    ResultCode Ret=1;
}